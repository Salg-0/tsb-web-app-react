# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup NodeJs
      - uses: actions/setup-node@v2
        with:
          node-version: 15

      # Install project packages and build project
      - name: Install Packages
        run: npm ci
      - name: Build project
        run: npm run build

      - name: Package build
        run: |
          tar -czvf deploy.tar.gz -C build .
          ls

      - name: Send packaged build to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "deploy.tar.gz"
          target: ${{ secrets.SERVER_ABSOLUTE_PATH }}

      - name: Replace previous version and deploy new one
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            echo "Changing directory to server location"
            cd ${{ secrets.SERVER_ABSOLUTE_PATH }}
            echo "Moving old version to a temporary folder"
            mkdir ../old_version
            mv ./{.*,*} ../old_version
            echo "Unzip new version to server location"
            tar -xf ../old_version/deploy.tar.gz -C ./
            echo "Move back db folder to server"
            mv ../old_version/db ./
            echo "Removing old version"
            rm -rf ../old_version/db
            echo "Deployment Complete"
